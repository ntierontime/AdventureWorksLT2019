@using Framework.Models;
@using AdventureWorksLT2019.Models;
@using AdventureWorksLT2019.Resx;
@model MvcItemViewModel<ProductDescriptionDataModel>
@inject IUIStrings localizor;
@if (Model!.UIItemFeatures.ShowItemButtons)
{
    <td class="p-0" style="width: 1% !important;">
    <div class="btn-group-lg dropdown dropstart btn-group-nt-actions">
        <button class="btn btn-default btn-sm mt-0 mb-0 pt-0 pb-0" data-bs-toggle="dropdown" role="button" aria-expanded="false"><i class="fa-solid fa-ellipsis-vertical"></i></button>
        <ul class="dropdown-menu border-0 bg-light m-0 p-0">
            <li class="d-inline-block">
                <div class="btn-group" role="group" aria-label="Menu group">
                    @if (Model!.UIItemFeatures.PrimayEditViewContainer == CrudViewContainers.Inline)
                    {
                        <button type="button" class="btn btn-default btn-nt-inline-editing" title="@localizor.Get("Edit")"
                            data-nt-action="@HttpMethods.Put"
                            data-nt-container="@CrudViewContainers.Inline.ToString()"
                            data-nt-template="@ViewItemTemplateNames.Edit.ToString()">
                            <i class="fa fa-edit"></i>
                        </button>
                    }
                </div>
            </li>
        </ul>
    </div>
    </td>
}
<td class="pt-0 pb-0">
    @Html.DisplayFor(m=>m.Model!.ProductDescriptionID)
</td>
<td class="pt-0 pb-0">
    @Html.DisplayFor(m=>m.Model!.Description)
</td>
<td class="pt-0 pb-0">
    @Html.DisplayFor(m=>m.Model!.rowguid)
</td>
<td class="pt-0 pb-0">
    @Html.DisplayFor(m=>m.Model!.ModifiedDate)
</td>
@if (Model!.UIItemFeatures.ShowItemUIStatus)
{
    <td class="form-group nt-item-status text-center" style="width: 1% !important;">
        @if (Model!.Model!.ItemUIStatus______ == ItemUIStatus.NoChange)
        {
                <i class="fa-solid fa-circle-notch text-success"></i>
        }
        else if (Model!.Model!.ItemUIStatus______ == ItemUIStatus.Updated) // Usually: will be changed by JQuery
        {
                <i class="fa-solid fa-circle text-danger"></i>
        }
        else // ItemUIStatus.New
        {
                    <i class="fa-solid fa-circle text-danger"></i>
        }
        <input asp-for="Model!.ItemUIStatus______" class="form-control" data-nt-value="@Model!.Model!.ItemUIStatus______" id="@Model!.HtmlId(nameof(ProductDescriptionDataModel.ItemUIStatus______))" name="@Model!.HtmlName(nameof(ProductDescriptionDataModel.ItemUIStatus______))" type="hidden" />
    </td>
}
@if (Model!.UIItemFeatures.ShowEditableListDeleteSelect)
{
    <td class="form-group nt-editablelist-delete-select text-center" style="width: 1% !important;">
        <input asp-for="Model!.IsDeleted______" class="form-check-input nt-form-check ms-1" type="checkbox"  id="@Model!.HtmlId(nameof(ProductDescriptionDataModel.IsDeleted______))" name="@Model!.HtmlName(nameof(ProductDescriptionDataModel.IsDeleted______))" data-nt-value="@Model!.Model!.IsDeleted______"/>
    </td>
}
