@using AdventureWorksLT2019.Resx;
@using Framework.Mvc.Models;
@using Framework.Models;
@using AdventureWorksLT2019.MvcWebApp.Models;
@using AdventureWorksLT2019.Models.Definitions;
@model ListSearchViewModel<CustomerAddressAdvancedQuery, CustomerAddressDataModel.DefaultView[]>
@inject IHttpContextAccessor Accessor
@inject SelectListHelper selectListHelper;
@inject IUIStrings localizor;
@{
    var format_All = localizor.Get("Format_All");
}
<div class="card nt-list-wrapper" id="@Model!.UIListSetting.UIListFeatures.ListWrapperId"
    data-nt-bs-modalsize="Large"
    data-nt-submittarget="#@Model!.UIListSetting.UIListFeatures.SearchFormId">
    <div class="card-header">
        @if (Model!.UIListSetting == null || Model!.UIListSetting.UIListFeatures.HasPageSizeList || Model!.UIListSetting.UIListFeatures.HasOrderByList)
        {
            <div class="btn-group float-end mt-1 ms-3 me-0 nt-page-size-and-order-by">
                <button class="btn btn-default dropdown-toggle" type="button" id="ddlPageSizeAndOrderBy@Model!.UIListSetting.UIListFeatures.ListWrapperId" data-bs-toggle="dropdown" data-bs-auto-close="true" aria-expanded="false">
                    <i class="fa-solid fa-sliders"></i>
                </button>
                <ul class="dropdown-menu" aria-labelledby="ddlPageSizeAndOrderBy@Model!.UIListSetting.UIListFeatures.ListWrapperId">
                    @if (Model!.UIListSetting == null || Model.UIListSetting.UIListFeatures.HasOrderByList)
                    {
                        foreach (var orderBy in Model.OrderByList)
                        {
                            <li class="nt-order-by-item ps-2" data-nt-page-size="@orderBy.Value" style="min-width: 200px;">
                                <div class="clearfix">
                                    <i class="fa-solid fa-check pe-2 float-start" @Html.Raw(orderBy.Value == Model.Query.OrderBys ? "" : "style='display:none'")></i>
                                    <span class="float-end pe-2">@Html.Raw(orderBy.Name)</span>
                                </div>
                            </li>
                        }
                    }
                    <li class="dropdown-divider" />
                    @if (Model!.UIListSetting == null || Model.UIListSetting.UIListFeatures.HasPageSizeList)
                    {
                        foreach (var pageSize in Model.PageSizeList)
                        {
                            <li class="nt-page-size-item ps-2" data-nt-page-size="@pageSize.Value" style="min-width: 200px;">
                                <div class="clearfix">
                                    <i class="fa-solid fa-check pe-2 float-start" @Html.Raw(pageSize.Value == Model.Query.PageSize.ToString() ? "" : "style='display:none'")></i>
                                    <span class="float-end pe-2">@Html.Raw(pageSize.Name)</span>
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>
        }
        @if (Model!.UIListSetting == null || Model!.UIListSetting.ShowListBulkActionRelated(true))
        {
            <div class="btn-group m-0 p-0 float-start nt-bulk-select-filter">
                <button type="button" class="btn btn-default m-0 p-0 btn-nt-bulk-select-status" data-nt-bulk-select-status="None">
                    <!--None/Some/All-->
                    <i class="fa-regular fa-square"></i>
                    <i class="fa-regular fa-square-minus d-none"></i>
                    <i class="fa-regular fa-square-check d-none"></i>
                </button>
                <button type="button" class="btn btn-default dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                    <span class="visually-hidden">Toggle Dropdown</span>
                </button>
                <ul class="dropdown-menu">
                </ul>
            </div>
        }
        <div class="btn-group float-start nt-refresh-button-group">
            <button type="button" class="btn btn-default btn-nt-fresh">
                <i class="fa-solid fa-rotate-right"></i>
            </button>
        </div>
    </div>
    <div class="card-body nt-list-container-submit row m-0 p-0">
        <!--Developer keep this logic same on all Index.cshtml, although the 3 views may not available for some tables-->
        @if (Model.UIListSetting == null || Model.UIListSetting.UIParams.PagedViewOption == ListViewOptions.Table || Model.UIListSetting.UIParams.PagedViewOption == ListViewOptions.EditableTable)
        {
            @await Html.PartialAsync("~/Views/CustomerAddress/_Table.cshtml", Model)
        }
        else if (Model.UIListSetting.UIParams.PagedViewOption == ListViewOptions.Tiles)
        {
            @await Html.PartialAsync("~/Views/CustomerAddress/_Tiles.cshtml", Model)
        }
        else if (Model.UIListSetting.UIParams.PagedViewOption == ListViewOptions.SlideShow)
        // SlideShow
        {
            @await Html.PartialAsync("~/Views/CustomerAddress/_SlideShow.cshtml", Model)
        }
    </div>
    <div class="fixed-bottom">
        <div class="float-start ms-5 ps-5 border-2 nt-singlton-message-popup bg-info" style="display:none">
        </div>
    </div>
</div>
