@using Framework.Models;
@using AdventureWorksLT2019.Models.Definitions;
@using AdventureWorksLT2019.MvcWebApp.Models;
@using AdventureWorksLT2019.Models;
@using AdventureWorksLT2019.Resx;
@model MvcItemViewModel<CustomerAddressDataModel.DefaultView>
@inject SelectListHelper selectListHelper;
@inject IUIStrings localizor;
@{
    var format_Please_Select = localizor.Get("Format_Please_Select");
}
@if (Model.Status != System.Net.HttpStatusCode.OK)
{
    <div class="row">
        <div class="text-danger">@Model.StatusMessage</div>
    </div>
}
else
{
    <input class="nt-hidden-modal-title" value="@Model!.Model!.AddressType" type="hidden" />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Model!.CustomerID" class="control-label" for="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.CustomerID))"></label>
        <select asp-for="Model!.CustomerID" class="form-control form-select nt-form-data" asp-items="@selectListHelper.GetSelectList(Model?.TopLevelDropDownListsFromDatabase?[TopLevelDropDownLists.Customer.ToString()])"
            data-nt-value="@Model!.Model!.CustomerID" id="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.CustomerID))"  name="@Model!.HtmlName(nameof(CustomerAddressDataModel.DefaultView.CustomerID))">
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Model!.AddressID" class="control-label" for="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.AddressID))"></label>
        <select asp-for="Model!.AddressID" class="form-control form-select nt-form-data" asp-items="@selectListHelper.GetSelectList(Model?.TopLevelDropDownListsFromDatabase?[TopLevelDropDownLists.Address.ToString()])"
            data-nt-value="@Model!.Model!.AddressID" id="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.AddressID))"  name="@Model!.HtmlName(nameof(CustomerAddressDataModel.DefaultView.AddressID))">
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Model!.AddressType" class="control-label" for="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.AddressType))"></label>
        <input asp-for="Model!.AddressType" class="form-control nt-form-data" id="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.AddressType))" name="@Model!.HtmlName(nameof(CustomerAddressDataModel.DefaultView.AddressType))" data-nt-value="@Model!.Model!.AddressType"/>
        <span asp-validation-for="Model!.AddressType" class="text-danger" data-valmsg-for="@Model!.HtmlName(nameof(CustomerAddressDataModel.DefaultView.AddressType))"></span>
    </div>
    <div class="form-group">
        <label asp-for="Model!.rowguid" class="control-label" for="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.rowguid))"></label>
        <input asp-for="Model!.rowguid" readonly class="form-control " id="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.rowguid))" name="@Model!.HtmlName(nameof(CustomerAddressDataModel.DefaultView.rowguid))" data-nt-value="@Model!.Model!.rowguid"/>
    </div>
    <div class="form-group">
        <label asp-for="Model!.ModifiedDate" class="control-label" for="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.ModifiedDate))"></label>
        <input asp-for="Model!.ModifiedDate" class="form-control nt-form-data" id="@Model!.HtmlId(nameof(CustomerAddressDataModel.DefaultView.ModifiedDate))" name="@Model!.HtmlName(nameof(CustomerAddressDataModel.DefaultView.ModifiedDate))" data-nt-value="@Model!.Model!.ModifiedDate"/>
        <span asp-validation-for="Model!.ModifiedDate" class="text-danger" data-valmsg-for="@Model!.HtmlName(nameof(CustomerAddressDataModel.DefaultView.ModifiedDate))"></span>
    </div>
}
