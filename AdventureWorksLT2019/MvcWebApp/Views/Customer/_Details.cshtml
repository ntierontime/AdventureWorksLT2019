@using Framework.Models;
@using AdventureWorksLT2019.Models.Definitions;
@using AdventureWorksLT2019.MvcWebApp.Models;
@using AdventureWorksLT2019.Models;
@using AdventureWorksLT2019.Resx;
@model MvcItemViewModel<CustomerDataModel>
@inject SelectListHelper selectListHelper;
@inject IUIStrings localizor;
@{
    var format_Please_Select = localizor.Get("Format_Please_Select");
}
@if (Model.Status != System.Net.HttpStatusCode.OK)
{
    <div class="row">
        <div class="text-danger">@Model.StatusMessage</div>
    </div>
}
else
{
    <input class="hidden-modal-title" value="@Model!.Model!.Title" type="hidden" />
    <div class="form-group">
        <label asp-for="Model!.CustomerID" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.CustomerID))"></label>
        @Html.DisplayFor(m=>m.Model!.CustomerID)
    </div>
    <div class="form-group">
        <label asp-for="Model!.NameStyle" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.NameStyle))"></label>
        @Html.DisplayFor(m=>m.Model!.NameStyle)
    </div>
    <div class="form-group">
        <label asp-for="Model!.Title" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.Title))"></label>
        @Html.DisplayFor(m=>m.Model!.Title)
    </div>
    <div class="form-group">
        <label asp-for="Model!.FirstName" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.FirstName))"></label>
        @Html.DisplayFor(m=>m.Model!.FirstName)
    </div>
    <div class="form-group">
        <label asp-for="Model!.MiddleName" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.MiddleName))"></label>
        @Html.DisplayFor(m=>m.Model!.MiddleName)
    </div>
    <div class="form-group">
        <label asp-for="Model!.LastName" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.LastName))"></label>
        @Html.DisplayFor(m=>m.Model!.LastName)
    </div>
    <div class="form-group">
        <label asp-for="Model!.Suffix" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.Suffix))"></label>
        @Html.DisplayFor(m=>m.Model!.Suffix)
    </div>
    <div class="form-group">
        <label asp-for="Model!.CompanyName" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.CompanyName))"></label>
        @Html.DisplayFor(m=>m.Model!.CompanyName)
    </div>
    <div class="form-group">
        <label asp-for="Model!.SalesPerson" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.SalesPerson))"></label>
        @Html.DisplayFor(m=>m.Model!.SalesPerson)
    </div>
    <div class="form-group">
        <label asp-for="Model!.EmailAddress" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.EmailAddress))"></label>
        @Html.DisplayFor(m=>m.Model!.EmailAddress)
    </div>
    <div class="form-group">
        <label asp-for="Model!.Phone" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.Phone))"></label>
        @Html.DisplayFor(m=>m.Model!.Phone)
    </div>
    <div class="form-group">
        <label asp-for="Model!.PasswordHash" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.PasswordHash))"></label>
        @Html.DisplayFor(m=>m.Model!.PasswordHash)
    </div>
    <div class="form-group">
        <label asp-for="Model!.PasswordSalt" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.PasswordSalt))"></label>
        @Html.DisplayFor(m=>m.Model!.PasswordSalt)
    </div>
    <div class="form-group">
        <label asp-for="Model!.rowguid" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.rowguid))"></label>
        @Html.DisplayFor(m=>m.Model!.rowguid)
    </div>
    <div class="form-group">
        <label asp-for="Model!.ModifiedDate" class="control-label" for="@Model!.HtmlId(nameof(CustomerDataModel.ModifiedDate))"></label>
        @Html.DisplayFor(m=>m.Model!.ModifiedDate)
    </div>
}
